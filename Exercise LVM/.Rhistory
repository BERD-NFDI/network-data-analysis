setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
set.seed = 123456
# Task 1: Load all required packages (network, blockmodels, latentnet)
library(network)
library(blockmodels)
library(latentnet)
# Task 2: Load the file forex_network.RDS into your environment (hint: maybe check out readRDS)
forex_network <- readRDS("forex_network.rds")
forex_network
forex_network %v% "gdpcap"
# Task 3: What additional covariate is provided? Describe and visualize it
plot(density(forex_network %v% "gdpcap"))
plot(forex_network,
mode = "fruchtermanreingold", # it's actually the default
vertex.cex = ((forex_network %v% "gdpcap") - 5)
)
# we can plot with country labels:
plot(forex_network,
mode = "fruchtermanreingold",
vertex.cex = ((forex_network %v% "gdpcap") - 5),
displaylabels = T
)
plot(forex_network,
mode = "fruchtermanreingold", # it's actually the default
vertex.cex = ((forex_network %v% "gdpcap"))
)
library(blockmodels)
library(blockmodels)
my_model=
BM_bernoulli(
membership_type="SBM",
adj=as.matrix(forex_network),
verbosity=6,
autosave='',
plotting=character(0),
exploration_factor=1.5,
explore_min=1,
explore_max=10)
my_model$estimate() #gives the likelihood for different number of comms
which.max(my_model$ICL) #The ICL criterion selects 4 communities
#create network attribute equal to the found block
found_block<-my_model$memberships[[4]]$map()[[1]]
forex_network%v%"block"= found_block
forex_network
#plot with color = block
plot(forex_network,vertex.col = found_block+1,displaylabels=T)
#plot with color = block
plot(forex_network,vertex.col = found_block+1,displaylabels=F)
#we can also plot with size proportional to per-capita gdp:
plot(forex_network,vertex.col = found_block+1,
vertex.cex = (forex_network %v% "gdpcap" - 5),
displaylabels=F)
#create network attribute equal to the found block
found_block<-my_model$memberships[[2]]$map()[[1]]
forex_network%v%"block"= found_block
#we can also plot with size proportional to per-capita gdp:
plot(forex_network,vertex.col = found_block+1,
vertex.cex = (forex_network %v% "gdpcap" - 5),
displaylabels=F)
#fit latent cluster random effect model in 2 dimensions and with 2 clusters
lsm <- ergmm(forex_network ~ euclidean(d=2, G=1) + rsender + rreceiver,
tofit="mkl", verbose=T)
#plot latent positions and posterior probabilities of cluster memberships
plot(lsm, print.formula=FALSE, labels=T)
#fit latent cluster random effect model in 2 dimensions and with 2 clusters
lsm <- ergmm(forex_network ~ euclidean(d=2, G=2) + rsender + rreceiver,
tofit="mkl", verbose=T)
#plot latent positions and posterior probabilities of cluster memberships
plot(lsm, print.formula=FALSE, labels=T)
summary(lsm)
#fit latent cluster random effect model in 2 dimensions and with 2 clusters
lsm <- ergmm(forex_network ~ euclidean(d=2, G=1) + rsender + rreceiver,
tofit="mkl", verbose=T)
summary(lsm)
